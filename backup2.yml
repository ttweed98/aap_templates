---
  - name: Backup Cisco running configuration and push to GitHub
    hosts: cisco_devices
    gather_facts: no
    tasks:
      - name: Retrieve running configuration
        cisco.ios.ios_config:
          backup: yes
        register: config_backup
  
      - name: Save configuration to a file
        copy:
          # If the configuration is directly available in the response
          # Adjust `config_backup.response` if the actual key is different
          content: "{{ config_backup.response }}"
          dest: "/tmp/{{ inventory_hostname }}-{{ ansible_date_time.date }}-running-config.txt"
  
        # If the module provides a path to a temporary file instead
        # use this alternative block
        # block:
        #   - name: Read configuration from backup file
        #     slurp:
        #       src: "{{ config_backup.backup_path }}"
        #     register: slurped_config
  
        #   - name: Save configuration to a file
        #     copy:
        #       content: "{{ slurped_config.content | b64decode }}"
        #       dest: "/tmp/{{ inventory_hostname }}-{{ ansible_date_time.date }}-running-config.txt"
  
      - name: Prepare Git environment
        block:
          - name: Ensure git is installed
            ansible.builtin.package:
              name: git
              state: present
  
      - name: Push configuration to GitHub
        block:
          - name: Clone the repo if not present
            ansible.builtin.git:
              repo: 'https://github.com/ttweed98/aap_templates'
              dest: /tmp/aap_templates
              clone: yes
              update: no
  
          - name: Copy configuration to repo
            copy:
              src: "/tmp/{{ inventory_hostname }}-{{ ansible_date_time.date }}-running-config.txt"
              dest: "/tmp/aap_templates/backups/{{ inventory_hostname }}-{{ ansible_date_time.date }}-running-config.txt"
              remote_src: no
  
          - name: Commit and push changes
            shell: |
              cd /tmp/aap_templates
              git add backups/{{ inventory_hostname }}-{{ ansible_date_time.date }}-running-config.txt
              git commit -m "Backup running config for {{ inventory_hostname }} on {{ ansible_date_time.date }}"
              git push origin main
            environment:
              GIT_AUTHOR_NAME: "Tony Tweed"
              GIT_AUTHOR_EMAIL: "ttweed98@gmail.com"
              GIT_COMMITTER_NAME: "Tony Tweed"
              GIT_COMMITTER_EMAIL: "ttweed98@gmail.com"
  
      # Optional cleanup task for temporary files if needed
      - name: Clean up temporary files
        file:
          path: "/tmp/{{ inventory_hostname }}-{{ ansible_date_time.date }}-running-config.txt"
          state: absent